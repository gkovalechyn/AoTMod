//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.18444
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
public class NameChangerCmd : ICommand{
	private string[] help = new string[]{
		"/nameChanger <on|off>",
		"/nameChanger add <name>",
		"/nameChanger remove <index>",
		"/nameChanger info",
		"/nameChanger mode <R|L|U|F>",
		"/nameChanger interval <value>",
		"/nameChanger target <self|ID>",
        "/nameChanger fade colors <.color> ... [color]",
        "/nameChanger fade steps <amount>",
        "/nameChanger fade invert <true|false>"
	};

	public bool cmd (string[] args, FengGameManagerMKII gm){
		if (args.Length == 0){
			ModMain.instance.sendToPlayer(this.help);
			return true;
		}
		if (args[0].Equals("add", StringComparison.OrdinalIgnoreCase)){
			ModMain.instance.getNameChanger().addName(this.getNameFromArgs(args));
			return true;
		}else if (args[0].Equals("remove", StringComparison.OrdinalIgnoreCase)){
			ModMain.instance.getNameChanger().removeName(int.Parse(args[1]));
			return true;
		}else if (args[0].Equals("info", StringComparison.OrdinalIgnoreCase)){
			this.sendInfo();
			return true;
		}else if (args[0].Equals("mode", StringComparison.OrdinalIgnoreCase)){
			this.setMode(args[1]);
			return true;
		}else if (args[0].Equals("interval", StringComparison.OrdinalIgnoreCase)){
			ModMain.instance.getNameChanger().setInterval(int.Parse(args[1]));
			return true;
		}else if (args[0].Equals("on", StringComparison.OrdinalIgnoreCase)){
			ModMain.instance.getNameChanger().start();
			return true;
		}else if (args[0].Equals("off", StringComparison.OrdinalIgnoreCase)){
			ModMain.instance.getNameChanger().stop();
			return true;
		}else if (args[0].Equals("target", StringComparison.OrdinalIgnoreCase)){
			if (args[1].Equals("self", StringComparison.OrdinalIgnoreCase)){
				ModMain.instance.getNameChanger().setTarget(-1);
			}else{
				ModMain.instance.getNameChanger().setTarget(int.Parse(args[1]));
			}
			return true;
        } else if (args[0].Equals("fade", StringComparison.OrdinalIgnoreCase)) {
            if (args[1].Equals("colors", StringComparison.OrdinalIgnoreCase)) {
                List<int> colors = new List<int>(args.Length - 2);

                for (int i = 2; i < args.Length; i++) {
                    colors.Add(int.Parse(args[i], System.Globalization.NumberStyles.HexNumber));
                }

                ModMain.instance.getNameChanger().setFadeColors(colors);
                return true;
            } else if (args[1].Equals("steps", StringComparison.OrdinalIgnoreCase)) {
                ModMain.instance.getNameChanger().setStepCount(int.Parse(args[2]));
                return true;
            } else if (args[1].Equals("invert", StringComparison.OrdinalIgnoreCase)) {
                ModMain.instance.getNameChanger().setInvertFade(args[2].Equals("true", StringComparison.OrdinalIgnoreCase));
                return true;
            } else {
                ModMain.instance.sendToPlayer("Unknown argument: " + args[1]);
            }
            return true;
        } else {
            ModMain.instance.sendToPlayer("Unknown argument: " + args[0]);
            return true;
        }
	}

	private string getNameFromArgs(string[] args){
		//nameChanger add <name>
		string[] parts = new string[args.Length - 1];
		Array.Copy(args, 1, parts, 0, parts.Length);
		return String.Join(" ", parts);
	}

	private void sendInfo(){
		NameChanger nc = ModMain.instance.getNameChanger();
		string result = "Is running: " + nc.isRunning() + "\n" +
			"Mode: " + nc.getMode() + "\n" +
			"Interval(ms): " + nc.getInterval() + "\n" +
			"Names:\n";
		foreach(string s in nc.getNames()){
			result += "- " + s + "\n";
		}
        result += "Step count: " + nc.getStepCount() + '\n';
        result += "Colors:\n";
        foreach (int i in nc.getFadeColors()) {
            result += "- " + i.ToString("X6");
        }
		ModMain.instance.sendToPlayer(result);
	}

	private void setMode(string mode){
		if (mode.Equals("L", StringComparison.OrdinalIgnoreCase)){
			ModMain.instance.getNameChanger().setMode(NameChanger.NameMode.LIST);
		}else if (mode.Equals("R", StringComparison.OrdinalIgnoreCase)){
			ModMain.instance.getNameChanger().setMode(NameChanger.NameMode.RANDOM);
		}else if (mode.Equals("U", StringComparison.OrdinalIgnoreCase)){
			ModMain.instance.getNameChanger().setMode(NameChanger.NameMode.UNICODE);
        } else if (mode.Equals("F", StringComparison.OrdinalIgnoreCase)) {
            ModMain.instance.getNameChanger().setMode(NameChanger.NameMode.FADE);
        }
	}

    public string getDescriptionString() {
        return "Controls the automatic name changer.";
    }
}

